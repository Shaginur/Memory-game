const EMOJI = ["ü•î", "üçí", "ü•ë", "üåΩ", "ü•ï", "üçá", "üçâ", "üçå", "ü•≠", "üçç"];
const emoji = EMOJI.concat(EMOJI);

//—Ñ—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–µ—Ç –∏–∑–Ω–∞—á–∞–ª—å–Ω—ã–π –º–∞—Å–∏–≤ –ø–æ–ª—É—á–∞–µ—Ç –ø–µ—Ä–≤—ã–µ –≤–æ—Å–µ–º—å —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–æ–∑–¥–∞–µ—Ç –ø–∞—Ä—ã –∏ —Å–Ω–æ–≤–∞ –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–µ—Ç –∏—Ö
function shuffle(emoji) {
  const shaffleEmoji = emoji.sort(() => Math.random(emoji) - 0.5);
  const receivingEmoji = shaffleEmoji.slice(0, 8);
  const rezalt = [...receivingEmoji, ...receivingEmoji].sort(
    () => Math.random([...receivingEmoji, ...receivingEmoji]) - 0,
    5
  );
  return rezalt;
}

/**
 * @property {number} moves - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —à–∞–≥–æ–≤
 * @property {number} time - –≤—Ä–µ–º—è –ø–æ—Å–ª–µ —Å—Ç–∞—Ä—Ç–∞
 * @property {boolean} start - —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
 * @property {number} flipp - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫
 * @property {number} totalFlipp - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Å–µ—Ö –ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫
 */
const STATE = {
  moves: 0,
  time: 0,
  start: false,
  flipp: 0,
  totalFlipp: 0,
};

/**
 * @property {HTMLDivElement} boardContainer - –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è.
 * @property {HTMLDivElement} board - –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–æ–ª—è (4x4).
 * @property {HTMLDivElement} moves - –ö–æ–Ω—Ç—Ä–æ–ª –¥–ª—è —É—á–µ—Ç–∞ —à–∞–≥–æ–≤.
 * @property {HTMLDivElement} timer - –ö–æ–Ω—Ç—Ä–æ–ª –¥–ª—è —É—á–µ—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏.
 * @property {HTMLButtonElement} start - –ö–Ω–æ–ø–∫–∞ –¥–ª—è —Å—Ç–∞—Ä—Ç–∞ –∏–≥—Ä—ã.
 */
const SELECTORS = {
  boardContainer: document.querySelector(".board-container"),
  board: document.querySelector(".board"),
  moves: document.querySelector(".moves"),
  timer: document.querySelector(".timer"),
  start: document.querySelector("button"),
};

Render();
//–æ—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ –Ω–∞–ø–æ–ª–Ω—è—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º —Ñ—É–Ω–∫—Ü–∏–∏ shuffle(emoji)
function Render() {
  const shuffleEmoji = shuffle(emoji);

  shuffleEmoji.forEach((element) => {
    SELECTORS.board.innerHTML += `<div class="card">
        <div class="card-front"></div>
        <div class="card-back">${element}</div>
        </div>
        `;
  });
}

//—Ñ—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç–∞ –∫–∞—Ä—Ç–æ—á–µ–∫
function flippCards() {
  const contentCards = [];

  const cards = SELECTORS.board.children;

  [...cards].forEach((element) => {

    element.addEventListener("click", (event) => {

      element.classList.add("flipped");

      contentCards.push(event.target.nextSibling.nextSibling?.innerHTML);

      for(let i = 0; i < contentCards.length; i++) {

        let eventRemove = document.querySelectorAll('.flipped'); 

        if(contentCards.length > 2 && contentCards[i] !== contentCards[i + 1]) {

          eventRemove[0].classList.remove('flipped')

          eventRemove[1].classList.remove('flipped')
        }
        STATE.totalFlipp + 2

      }
    });
  });
}

//–º–∞—Å–∏–≤ —Å —Å–æ–¥–µ—Ä–∂–∏–º—ã–º –∫–∞—Ä—Ç

function flipBackCards() {}

flippCards();
